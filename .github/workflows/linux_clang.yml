name: linux clang build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: false

    - name: Install ninja, lcov, dependencies (Poco + GTest)
      shell: bash
      run: sudo apt install ninja-build lcov libpoco-dev libgtest-dev

    - name: Install clang-16
      run: |
        wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | sudo apt-key add -
        . /etc/lsb-release
        sudo add-apt-repository -y "deb http://apt.llvm.org/${DISTRIB_CODENAME}/ llvm-toolchain-${DISTRIB_CODENAME}-16 main"
        sudo apt install -y clang-16 llvm-16
        sudo update-alternatives --install /usr/bin/clang clang /usr/bin/clang-16 100
        sudo update-alternatives --set clang /usr/bin/clang-16
        sudo update-alternatives --install /usr/bin/clang++ clang++ /usr/bin/clang++-16 100
        sudo update-alternatives --set clang++ /usr/bin/clang++-16
        sudo update-alternatives --install /usr/bin/llvm-cov llvm-cov /usr/bin/llvm-cov-16 100
        sudo update-alternatives --install /usr/bin/asan_symbolize asan_symbolize /usr/bin/asan_symbolize-16 100

    - name: Configure CMake for Debug build
      shell: cmake -P {0}
      run: |
        execute_process(
          COMMAND cmake
            -S ${{ github.workspace }}
            -B build
            -D CMAKE_BUILD_TYPE=Debug
            -D CMAKE_CXX_COMPILER=clang++
            -G Ninja
            -D BUILD_TESTING=ON
            -D CMAKE_INSTALL_PREFIX=build/install
          RESULT_VARIABLE result
        )
        if (NOT result EQUAL 0)
          message(FATAL_ERROR "Failed to build project")
        endif()

    - name: Build Debug
      shell: bash
      run: cmake --build build

    - name: Run tests
      shell: bash
      run: ctest -VV --test-dir build

    - name: Install
      shell: bash
      run: cmake --build build -t install

    - name: Remove build folder before Release build
      shell: bash
      run: rm -rf build

    - name: Configure CMake for Release build
      shell: cmake -P {0}
      run: |
        execute_process(
          COMMAND cmake
            -S ${{ github.workspace }}
            -B build
            -D CMAKE_BUILD_TYPE=Release
            -D CMAKE_CXX_COMPILER=clang++
            -G Ninja
            -D BUILD_TESTING=ON
            -D CMAKE_INSTALL_PREFIX=build/install
          RESULT_VARIABLE result
        )
        if (NOT result EQUAL 0)
          message(FATAL_ERROR "Failed to build project")
        endif()

    - name: Build Release
      shell: bash
      run: cmake --build build

    - name: Run tests
      shell: bash
      run: ctest -VV --test-dir build

    - name: Install
      shell: bash
      run: cmake --build build -t install
