name: linux static analysis

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: false

    - name: Install GCC 13, ninja, dependencies (Poco), clang
      shell: bash
      run: |
        sudo add-apt-repository ppa:ubuntu-toolchain-r/test
        sudo apt install gcc-13 g++-13 ninja-build libpoco-dev clang
        sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-13 100 --slave /usr/bin/g++ g++ /usr/bin/g++-13 --slave /usr/bin/gcov gcov /usr/bin/gcov-13
        sudo update-alternatives --set gcc /usr/bin/gcc-13

    - name: Install LLVM 16 (for clang-tidy-16)
      shell: bash
      run: |
        wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | sudo apt-key add -
        sudo apt-add-repository "deb http://apt.llvm.org/jammy/ llvm-toolchain-jammy-16 main"
        sudo apt update
        sudo apt install llvm-16 llvm-16-dev llvm-16-tools clang-16 clang-tidy-16 clang-tools-16 \
          libclang-16-dev libflac-dev libsdl2-dev libsdl2-ttf-dev libsdl2-image-dev libsdl2-mixer-dev \
          libpulse-dev ccache gettext jq

    - name: Ensure clang-tidy point to LLVM 16
      shell: bash
      run: |
          mkdir ~/llvm-command-override
          ln -s /usr/bin/clang-tidy-16 ~/llvm-command-override/clang-tidy
          echo "$HOME/llvm-command-override" >> $GITHUB_PATH

    - name: Show clang-tidy version
      shell: bash
      run: clang-tidy --version

    - name: Configure CMake for static analysis
      shell: cmake -P {0}
      run: |
        execute_process(
          COMMAND cmake
            -S ${{ github.workspace }}
            -B build
            -D CMAKE_BUILD_TYPE=Debug
            -D CMAKE_CXX_COMPILER=g++
            -G Ninja
            -D STATIC_ANALYSIS=ON
          RESULT_VARIABLE result
        )
        if (NOT result EQUAL 0)
          message(FATAL_ERROR "Failed to build project")
        endif()

    - name: Build + run static analysis
      shell: bash
      run: cmake --build build
